@namespace(uri="Main_DV", prefix="MDV")
package DataView_Main;

class DataArchitecture {
	val Node[*] nodes;
	val Connection[*] links;
}

class Node {
	attr String NodeName;
	ref Connection[*]#from outgoing;
	ref Connection[*]#to incoming;
	val DataRepresentation[+] dataRepresentation;
	val NodeBehavior[1] nodeBehavior;
	val MessagePort[*] ports;
}

class Connection {
	ref Node#outgoing from;
	ref Node#incoming to;
	ref OutMessagePort[1] source;
	ref InMessagePort[1] target;
}

abstract class MessagePort {
	attr String name;
}

class InMessagePort extends MessagePort {
}

class OutMessagePort extends MessagePort {
}

class NodeBehavior {
}

class DataRepresentation {
	ref DataFormat dataFormat;
	attr String dataDescription;
	ref DataProcessingType dataProcessingType;
	ref DataStorageType dataStorageType;
}

abstract class DataFormat {
}

abstract class StructuredData extends DataFormat {
}

abstract class SemiStructuredData extends DataFormat {
}

abstract class UnStructuredData extends DataFormat {
}

abstract class DataStorageType {
}

class HDFS extends DataStorageType {
}

class Relational extends DataStorageType {
}

class Multidimensional extends DataStorageType {
}

abstract class NoSQL extends DataStorageType {
}

abstract class DataProcessingType {
}

class RealTime extends DataProcessingType {
}

class Batch extends DataProcessingType {
}

abstract class LinkableElement extends NodeBehavior {
	ref Link[*]#source outgoing;
}

abstract class Action extends LinkableElement {
	ref Link[*]#target incoming;
}

class Link extends NodeBehavior {
	ref LinkableElement[1]#outgoing source;
	ref Action[1]#incoming target;
}

abstract class Event extends LinkableElement {
}

class ReceiveData extends Event {
	ref DataRepresentation dataRecipient;
}

class SendData extends Action {
	ref DataRepresentation dataRecipient;
}

class Generate extends Action {
}

class Ingest extends Action{
}

class Store extends Action{
}

class Analyze extends Action{
}

class Consume extends Action{
}

class Process extends Action{
}

class Tranfrom extends Ingest {
}

class Compress extends Ingest {
}

class Integrate extends Ingest {
}

class Identify extends Ingest {
}

class Validate extends Ingest {
}

class Classify extends Process {
}

class Sort extends Process {
}

class Merge extends Process {
}

class Tranform extends Process {
}

class Aggregate extends Process {
}

class Cleaning extends Process {
}

class Filter extends Ingest, Process {
}

class ReduceNoise extends Ingest {
}
class Type extends Analyze {
}

class Technique extends Analyze {
}
class Describe extends Type {
}

class Diagnose extends Type {
}

class Predict extends Type {
}

class Prescript extends Type {
}

class Quantitative extends Technique {
}

class Qualitative extends Technique {
}

class Statistical extends Technique {
}

