/**
 */
package DataArch.provider;

import DataArch.util.DataArchAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class DataArchItemProviderAdapterFactory extends DataArchAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DataArchItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.DataArchitecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataArchitectureItemProvider dataArchitectureItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.DataArchitecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataArchitectureAdapter() {
		if (dataArchitectureItemProvider == null) {
			dataArchitectureItemProvider = new DataArchitectureItemProvider(this);
		}

		return dataArchitectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.DataNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataNodeItemProvider dataNodeItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.DataNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataNodeAdapter() {
		if (dataNodeItemProvider == null) {
			dataNodeItemProvider = new DataNodeItemProvider(this);
		}

		return dataNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.InMessagePort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InMessagePortItemProvider inMessagePortItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.InMessagePort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInMessagePortAdapter() {
		if (inMessagePortItemProvider == null) {
			inMessagePortItemProvider = new InMessagePortItemProvider(this);
		}

		return inMessagePortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.OutMessagePort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutMessagePortItemProvider outMessagePortItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.OutMessagePort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutMessagePortAdapter() {
		if (outMessagePortItemProvider == null) {
			outMessagePortItemProvider = new OutMessagePortItemProvider(this);
		}

		return outMessagePortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Cloud} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CloudItemProvider cloudItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Cloud}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCloudAdapter() {
		if (cloudItemProvider == null) {
			cloudItemProvider = new CloudItemProvider(this);
		}

		return cloudItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.On_Premise} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected On_PremiseItemProvider on_PremiseItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.On_Premise}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOn_PremiseAdapter() {
		if (on_PremiseItemProvider == null) {
			on_PremiseItemProvider = new On_PremiseItemProvider(this);
		}

		return on_PremiseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.File_System} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected File_SystemItemProvider file_SystemItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.File_System}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFile_SystemAdapter() {
		if (file_SystemItemProvider == null) {
			file_SystemItemProvider = new File_SystemItemProvider(this);
		}

		return file_SystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Relational} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationalItemProvider relationalItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Relational}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationalAdapter() {
		if (relationalItemProvider == null) {
			relationalItemProvider = new RelationalItemProvider(this);
		}

		return relationalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Multidimensional} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultidimensionalItemProvider multidimensionalItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Multidimensional}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultidimensionalAdapter() {
		if (multidimensionalItemProvider == null) {
			multidimensionalItemProvider = new MultidimensionalItemProvider(this);
		}

		return multidimensionalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.RealTime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealTimeItemProvider realTimeItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.RealTime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealTimeAdapter() {
		if (realTimeItemProvider == null) {
			realTimeItemProvider = new RealTimeItemProvider(this);
		}

		return realTimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Batch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BatchItemProvider batchItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Batch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBatchAdapter() {
		if (batchItemProvider == null) {
			batchItemProvider = new BatchItemProvider(this);
		}

		return batchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Link} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkItemProvider linkItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Link}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkAdapter() {
		if (linkItemProvider == null) {
			linkItemProvider = new LinkItemProvider(this);
		}

		return linkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.ReceiveData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReceiveDataItemProvider receiveDataItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.ReceiveData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReceiveDataAdapter() {
		if (receiveDataItemProvider == null) {
			receiveDataItemProvider = new ReceiveDataItemProvider(this);
		}

		return receiveDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.SendData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SendDataItemProvider sendDataItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.SendData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSendDataAdapter() {
		if (sendDataItemProvider == null) {
			sendDataItemProvider = new SendDataItemProvider(this);
		}

		return sendDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Generate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenerateItemProvider generateItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Generate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenerateAdapter() {
		if (generateItemProvider == null) {
			generateItemProvider = new GenerateItemProvider(this);
		}

		return generateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Ingest} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IngestItemProvider ingestItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Ingest}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIngestAdapter() {
		if (ingestItemProvider == null) {
			ingestItemProvider = new IngestItemProvider(this);
		}

		return ingestItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Analyze} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalyzeItemProvider analyzeItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Analyze}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalyzeAdapter() {
		if (analyzeItemProvider == null) {
			analyzeItemProvider = new AnalyzeItemProvider(this);
		}

		return analyzeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Visualize} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VisualizeItemProvider visualizeItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Visualize}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVisualizeAdapter() {
		if (visualizeItemProvider == null) {
			visualizeItemProvider = new VisualizeItemProvider(this);
		}

		return visualizeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Query_Report} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Query_ReportItemProvider query_ReportItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Query_Report}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuery_ReportAdapter() {
		if (query_ReportItemProvider == null) {
			query_ReportItemProvider = new Query_ReportItemProvider(this);
		}

		return query_ReportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.API} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APIItemProvider apiItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.API}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPIAdapter() {
		if (apiItemProvider == null) {
			apiItemProvider = new APIItemProvider(this);
		}

		return apiItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Process} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessItemProvider processItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Process}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessAdapter() {
		if (processItemProvider == null) {
			processItemProvider = new ProcessItemProvider(this);
		}

		return processItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Tranfrom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TranfromItemProvider tranfromItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Tranfrom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTranfromAdapter() {
		if (tranfromItemProvider == null) {
			tranfromItemProvider = new TranfromItemProvider(this);
		}

		return tranfromItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Compress} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompressItemProvider compressItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Compress}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompressAdapter() {
		if (compressItemProvider == null) {
			compressItemProvider = new CompressItemProvider(this);
		}

		return compressItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Integrate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegrateItemProvider integrateItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Integrate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegrateAdapter() {
		if (integrateItemProvider == null) {
			integrateItemProvider = new IntegrateItemProvider(this);
		}

		return integrateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Identify} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdentifyItemProvider identifyItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Identify}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdentifyAdapter() {
		if (identifyItemProvider == null) {
			identifyItemProvider = new IdentifyItemProvider(this);
		}

		return identifyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Validate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateItemProvider validateItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Validate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateAdapter() {
		if (validateItemProvider == null) {
			validateItemProvider = new ValidateItemProvider(this);
		}

		return validateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Classify} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifyItemProvider classifyItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Classify}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifyAdapter() {
		if (classifyItemProvider == null) {
			classifyItemProvider = new ClassifyItemProvider(this);
		}

		return classifyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Sort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SortItemProvider sortItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Sort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSortAdapter() {
		if (sortItemProvider == null) {
			sortItemProvider = new SortItemProvider(this);
		}

		return sortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Merge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergeItemProvider mergeItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Merge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergeAdapter() {
		if (mergeItemProvider == null) {
			mergeItemProvider = new MergeItemProvider(this);
		}

		return mergeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Aggregate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateItemProvider aggregateItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Aggregate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateAdapter() {
		if (aggregateItemProvider == null) {
			aggregateItemProvider = new AggregateItemProvider(this);
		}

		return aggregateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Cleaning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CleaningItemProvider cleaningItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Cleaning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCleaningAdapter() {
		if (cleaningItemProvider == null) {
			cleaningItemProvider = new CleaningItemProvider(this);
		}

		return cleaningItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Filter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterItemProvider filterItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Filter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterAdapter() {
		if (filterItemProvider == null) {
			filterItemProvider = new FilterItemProvider(this);
		}

		return filterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.ReduceNoise} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReduceNoiseItemProvider reduceNoiseItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.ReduceNoise}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReduceNoiseAdapter() {
		if (reduceNoiseItemProvider == null) {
			reduceNoiseItemProvider = new ReduceNoiseItemProvider(this);
		}

		return reduceNoiseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Describe} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescribeItemProvider describeItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Describe}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescribeAdapter() {
		if (describeItemProvider == null) {
			describeItemProvider = new DescribeItemProvider(this);
		}

		return describeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Diagnose} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagnoseItemProvider diagnoseItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Diagnose}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagnoseAdapter() {
		if (diagnoseItemProvider == null) {
			diagnoseItemProvider = new DiagnoseItemProvider(this);
		}

		return diagnoseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Predict} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PredictItemProvider predictItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Predict}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPredictAdapter() {
		if (predictItemProvider == null) {
			predictItemProvider = new PredictItemProvider(this);
		}

		return predictItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Prescript} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrescriptItemProvider prescriptItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Prescript}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrescriptAdapter() {
		if (prescriptItemProvider == null) {
			prescriptItemProvider = new PrescriptItemProvider(this);
		}

		return prescriptItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Math_Operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Math_OperationItemProvider math_OperationItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Math_Operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMath_OperationAdapter() {
		if (math_OperationItemProvider == null) {
			math_OperationItemProvider = new Math_OperationItemProvider(this);
		}

		return math_OperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.RelationalDB} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationalDBItemProvider relationalDBItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.RelationalDB}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationalDBAdapter() {
		if (relationalDBItemProvider == null) {
			relationalDBItemProvider = new RelationalDBItemProvider(this);
		}

		return relationalDBItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.XML} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XMLItemProvider xmlItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.XML}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXMLAdapter() {
		if (xmlItemProvider == null) {
			xmlItemProvider = new XMLItemProvider(this);
		}

		return xmlItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.JSON} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JSONItemProvider jsonItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.JSON}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJSONAdapter() {
		if (jsonItemProvider == null) {
			jsonItemProvider = new JSONItemProvider(this);
		}

		return jsonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.CSV} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CSVItemProvider csvItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.CSV}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCSVAdapter() {
		if (csvItemProvider == null) {
			csvItemProvider = new CSVItemProvider(this);
		}

		return csvItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Excel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExcelItemProvider excelItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Excel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExcelAdapter() {
		if (excelItemProvider == null) {
			excelItemProvider = new ExcelItemProvider(this);
		}

		return excelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.HTML} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HTMLItemProvider htmlItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.HTML}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHTMLAdapter() {
		if (htmlItemProvider == null) {
			htmlItemProvider = new HTMLItemProvider(this);
		}

		return htmlItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.RDF} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RDFItemProvider rdfItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.RDF}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRDFAdapter() {
		if (rdfItemProvider == null) {
			rdfItemProvider = new RDFItemProvider(this);
		}

		return rdfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.EDI} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EDIItemProvider ediItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.EDI}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEDIAdapter() {
		if (ediItemProvider == null) {
			ediItemProvider = new EDIItemProvider(this);
		}

		return ediItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.SMS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SMSItemProvider smsItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.SMS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSMSAdapter() {
		if (smsItemProvider == null) {
			smsItemProvider = new SMSItemProvider(this);
		}

		return smsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Email} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmailItemProvider emailItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Email}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmailAdapter() {
		if (emailItemProvider == null) {
			emailItemProvider = new EmailItemProvider(this);
		}

		return emailItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Audio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AudioItemProvider audioItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Audio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAudioAdapter() {
		if (audioItemProvider == null) {
			audioItemProvider = new AudioItemProvider(this);
		}

		return audioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Video} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VideoItemProvider videoItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Video}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVideoAdapter() {
		if (videoItemProvider == null) {
			videoItemProvider = new VideoItemProvider(this);
		}

		return videoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Image} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageItemProvider imageItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Image}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageAdapter() {
		if (imageItemProvider == null) {
			imageItemProvider = new ImageItemProvider(this);
		}

		return imageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.GPSData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GPSDataItemProvider gpsDataItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.GPSData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGPSDataAdapter() {
		if (gpsDataItemProvider == null) {
			gpsDataItemProvider = new GPSDataItemProvider(this);
		}

		return gpsDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Logs} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogsItemProvider logsItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Logs}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogsAdapter() {
		if (logsItemProvider == null) {
			logsItemProvider = new LogsItemProvider(this);
		}

		return logsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.WordFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WordFileItemProvider wordFileItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.WordFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWordFileAdapter() {
		if (wordFileItemProvider == null) {
			wordFileItemProvider = new WordFileItemProvider(this);
		}

		return wordFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.PDFFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PDFFileItemProvider pdfFileItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.PDFFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPDFFileAdapter() {
		if (pdfFileItemProvider == null) {
			pdfFileItemProvider = new PDFFileItemProvider(this);
		}

		return pdfFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.TextFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextFileItemProvider textFileItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.TextFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextFileAdapter() {
		if (textFileItemProvider == null) {
			textFileItemProvider = new TextFileItemProvider(this);
		}

		return textFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.SensorData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SensorDataItemProvider sensorDataItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.SensorData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSensorDataAdapter() {
		if (sensorDataItemProvider == null) {
			sensorDataItemProvider = new SensorDataItemProvider(this);
		}

		return sensorDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.DocumentOriented} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentOrientedItemProvider documentOrientedItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.DocumentOriented}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentOrientedAdapter() {
		if (documentOrientedItemProvider == null) {
			documentOrientedItemProvider = new DocumentOrientedItemProvider(this);
		}

		return documentOrientedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.ColumnOriented} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColumnOrientedItemProvider columnOrientedItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.ColumnOriented}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumnOrientedAdapter() {
		if (columnOrientedItemProvider == null) {
			columnOrientedItemProvider = new ColumnOrientedItemProvider(this);
		}

		return columnOrientedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.GraphsDatabase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GraphsDatabaseItemProvider graphsDatabaseItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.GraphsDatabase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGraphsDatabaseAdapter() {
		if (graphsDatabaseItemProvider == null) {
			graphsDatabaseItemProvider = new GraphsDatabaseItemProvider(this);
		}

		return graphsDatabaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.KeyValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyValueItemProvider keyValueItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.KeyValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyValueAdapter() {
		if (keyValueItemProvider == null) {
			keyValueItemProvider = new KeyValueItemProvider(this);
		}

		return keyValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Retrieve} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RetrieveItemProvider retrieveItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Retrieve}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRetrieveAdapter() {
		if (retrieveItemProvider == null) {
			retrieveItemProvider = new RetrieveItemProvider(this);
		}

		return retrieveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Save} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SaveItemProvider saveItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Save}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSaveAdapter() {
		if (saveItemProvider == null) {
			saveItemProvider = new SaveItemProvider(this);
		}

		return saveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Archive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchiveItemProvider archiveItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Archive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchiveAdapter() {
		if (archiveItemProvider == null) {
			archiveItemProvider = new ArchiveItemProvider(this);
		}

		return archiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link DataArch.Govern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GovernItemProvider governItemProvider;

	/**
	 * This creates an adapter for a {@link DataArch.Govern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGovernAdapter() {
		if (governItemProvider == null) {
			governItemProvider = new GovernItemProvider(this);
		}

		return governItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (dataArchitectureItemProvider != null) dataArchitectureItemProvider.dispose();
		if (dataNodeItemProvider != null) dataNodeItemProvider.dispose();
		if (connectionItemProvider != null) connectionItemProvider.dispose();
		if (inMessagePortItemProvider != null) inMessagePortItemProvider.dispose();
		if (outMessagePortItemProvider != null) outMessagePortItemProvider.dispose();
		if (cloudItemProvider != null) cloudItemProvider.dispose();
		if (on_PremiseItemProvider != null) on_PremiseItemProvider.dispose();
		if (file_SystemItemProvider != null) file_SystemItemProvider.dispose();
		if (relationalItemProvider != null) relationalItemProvider.dispose();
		if (multidimensionalItemProvider != null) multidimensionalItemProvider.dispose();
		if (realTimeItemProvider != null) realTimeItemProvider.dispose();
		if (batchItemProvider != null) batchItemProvider.dispose();
		if (linkItemProvider != null) linkItemProvider.dispose();
		if (receiveDataItemProvider != null) receiveDataItemProvider.dispose();
		if (sendDataItemProvider != null) sendDataItemProvider.dispose();
		if (generateItemProvider != null) generateItemProvider.dispose();
		if (ingestItemProvider != null) ingestItemProvider.dispose();
		if (analyzeItemProvider != null) analyzeItemProvider.dispose();
		if (visualizeItemProvider != null) visualizeItemProvider.dispose();
		if (query_ReportItemProvider != null) query_ReportItemProvider.dispose();
		if (apiItemProvider != null) apiItemProvider.dispose();
		if (processItemProvider != null) processItemProvider.dispose();
		if (tranfromItemProvider != null) tranfromItemProvider.dispose();
		if (compressItemProvider != null) compressItemProvider.dispose();
		if (integrateItemProvider != null) integrateItemProvider.dispose();
		if (identifyItemProvider != null) identifyItemProvider.dispose();
		if (validateItemProvider != null) validateItemProvider.dispose();
		if (classifyItemProvider != null) classifyItemProvider.dispose();
		if (sortItemProvider != null) sortItemProvider.dispose();
		if (mergeItemProvider != null) mergeItemProvider.dispose();
		if (aggregateItemProvider != null) aggregateItemProvider.dispose();
		if (cleaningItemProvider != null) cleaningItemProvider.dispose();
		if (filterItemProvider != null) filterItemProvider.dispose();
		if (reduceNoiseItemProvider != null) reduceNoiseItemProvider.dispose();
		if (describeItemProvider != null) describeItemProvider.dispose();
		if (diagnoseItemProvider != null) diagnoseItemProvider.dispose();
		if (predictItemProvider != null) predictItemProvider.dispose();
		if (prescriptItemProvider != null) prescriptItemProvider.dispose();
		if (math_OperationItemProvider != null) math_OperationItemProvider.dispose();
		if (relationalDBItemProvider != null) relationalDBItemProvider.dispose();
		if (xmlItemProvider != null) xmlItemProvider.dispose();
		if (jsonItemProvider != null) jsonItemProvider.dispose();
		if (csvItemProvider != null) csvItemProvider.dispose();
		if (excelItemProvider != null) excelItemProvider.dispose();
		if (htmlItemProvider != null) htmlItemProvider.dispose();
		if (rdfItemProvider != null) rdfItemProvider.dispose();
		if (ediItemProvider != null) ediItemProvider.dispose();
		if (smsItemProvider != null) smsItemProvider.dispose();
		if (emailItemProvider != null) emailItemProvider.dispose();
		if (audioItemProvider != null) audioItemProvider.dispose();
		if (videoItemProvider != null) videoItemProvider.dispose();
		if (imageItemProvider != null) imageItemProvider.dispose();
		if (gpsDataItemProvider != null) gpsDataItemProvider.dispose();
		if (logsItemProvider != null) logsItemProvider.dispose();
		if (wordFileItemProvider != null) wordFileItemProvider.dispose();
		if (pdfFileItemProvider != null) pdfFileItemProvider.dispose();
		if (textFileItemProvider != null) textFileItemProvider.dispose();
		if (sensorDataItemProvider != null) sensorDataItemProvider.dispose();
		if (documentOrientedItemProvider != null) documentOrientedItemProvider.dispose();
		if (columnOrientedItemProvider != null) columnOrientedItemProvider.dispose();
		if (graphsDatabaseItemProvider != null) graphsDatabaseItemProvider.dispose();
		if (keyValueItemProvider != null) keyValueItemProvider.dispose();
		if (retrieveItemProvider != null) retrieveItemProvider.dispose();
		if (saveItemProvider != null) saveItemProvider.dispose();
		if (archiveItemProvider != null) archiveItemProvider.dispose();
		if (governItemProvider != null) governItemProvider.dispose();
	}

}
